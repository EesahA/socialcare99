{"ast":null,"code":"var _jsxFileName = \"/Users/eesahadam/Desktop/socialcare99/client/src/components/KanbanBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TaskForm from './TaskForm';\nimport TaskDetail from './TaskDetail';\nimport './KanbanBoard.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst KanbanBoard = ({\n  showCreateButtons = false,\n  onTaskCreated\n}) => {\n  _s();\n  const [kanbanData, setKanbanData] = useState({\n    Backlog: [],\n    'In Progress': [],\n    Blocked: [],\n    Complete: []\n  });\n  const [loading, setLoading] = useState(true);\n  const [showTaskForm, setShowTaskForm] = useState(false);\n  const [showTaskDetail, setShowTaskDetail] = useState(false);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [prefillStatus, setPrefillStatus] = useState(null);\n  const [draggedTask, setDraggedTask] = useState(null);\n  const [dragOverColumn, setDragOverColumn] = useState(null);\n  const fetchTasks = async () => {\n    try {\n      const response = await axios.get('http://localhost:3000/api/tasks', {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      const grouped = response.data.reduce((acc, task) => {\n        const status = task.status || 'Backlog';\n        if (!acc[status]) acc[status] = [];\n        acc[status].push(task);\n        return acc;\n      }, {\n        Backlog: [],\n        'In Progress': [],\n        Blocked: [],\n        Complete: []\n      });\n      setKanbanData(grouped);\n    } catch (error) {\n      console.error('Failed to fetch tasks:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  useEffect(() => {\n    if (onTaskCreated) {\n      fetchTasks();\n    }\n  }, [onTaskCreated]);\n  const getPriorityColor = priority => {\n    switch (priority) {\n      case 'High':\n        return '#e74c3c';\n      case 'Medium':\n        return '#f1c40f';\n      case 'Low':\n        return '#2ecc71';\n      default:\n        return '#95a5a6';\n    }\n  };\n  const getDueDateColor = dueDate => {\n    const now = new Date();\n    const due = new Date(dueDate);\n    const diffTime = due - now;\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    if (diffDays < 0) {\n      return '#e74c3c'; // Red for overdue\n    } else if (diffDays <= 3) {\n      return '#f39c12'; // Amber for due within 3 days\n    } else {\n      return '#6c757d';\n    }\n  };\n  const handleAddTask = status => {\n    setPrefillStatus(status);\n    setShowTaskForm(true);\n  };\n  const handleTaskClick = task => {\n    setSelectedTask(task);\n    setShowTaskDetail(true);\n  };\n  const handleTaskCreated = task => {\n    fetchTasks();\n    setShowTaskForm(false);\n    setPrefillStatus(null);\n  };\n  const handleTaskUpdated = updatedTask => {\n    fetchTasks();\n    setSelectedTask(updatedTask);\n  };\n  const handleTaskDeleted = taskId => {\n    fetchTasks();\n    setShowTaskDetail(false);\n    setSelectedTask(null);\n  };\n\n  // Drag and Drop handlers\n  const handleDragStart = (e, task) => {\n    setDraggedTask(task);\n    e.dataTransfer.effectAllowed = 'move';\n    e.dataTransfer.setData('text/html', e.target.outerHTML);\n  };\n  const handleDragOver = (e, columnName) => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n    setDragOverColumn(columnName);\n  };\n  const handleDragLeave = e => {\n    e.preventDefault();\n    setDragOverColumn(null);\n  };\n  const handleDrop = async (e, targetColumn) => {\n    e.preventDefault();\n    setDragOverColumn(null);\n    if (!draggedTask || draggedTask.status === targetColumn) {\n      setDraggedTask(null);\n      return;\n    }\n    try {\n      // Update task status in backend\n      const response = await axios.put(`http://localhost:3000/api/tasks/${draggedTask._id}`, {\n        ...draggedTask,\n        status: targetColumn\n      }, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n\n      // Update local state\n      setKanbanData(prev => {\n        const newData = {\n          ...prev\n        };\n\n        // Remove from original column\n        newData[draggedTask.status] = newData[draggedTask.status].filter(task => task._id !== draggedTask._id);\n\n        // Add to target column\n        newData[targetColumn] = [...newData[targetColumn], response.data];\n        return newData;\n      });\n      setDraggedTask(null);\n    } catch (error) {\n      console.error('Failed to update task status:', error);\n      setDraggedTask(null);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kanban-loading\",\n      children: \"Loading tasks...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kanban-board\",\n      children: Object.keys(kanbanData).map(column => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `kanban-column ${dragOverColumn === column ? 'drag-over' : ''}`,\n        onDragOver: e => handleDragOver(e, column),\n        onDragLeave: handleDragLeave,\n        onDrop: e => handleDrop(e, column),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"kanban-column-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: column\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"task-count\",\n            children: kanbanData[column].length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"kanban-column-content\",\n          children: [kanbanData[column].map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `kanban-task ${(draggedTask === null || draggedTask === void 0 ? void 0 : draggedTask._id) === task._id ? 'dragging' : ''}`,\n            onClick: () => handleTaskClick(task),\n            draggable: true,\n            onDragStart: e => handleDragStart(e, task),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-title-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"task-title\",\n                  children: task.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"drag-handle\",\n                  children: \"\\u22EE\\u22EE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"priority-indicator\",\n                style: {\n                  backgroundColor: getPriorityColor(task.priority)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 19\n            }, this), task.description && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"task-description\",\n              children: task.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"task-case\",\n                children: [\"Case: \", task.caseName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 21\n              }, this), task.assignedTo && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"task-assignee\",\n                children: [\"Assigned: \", task.assignedTo]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"task-due\",\n                style: {\n                  color: getDueDateColor(task.dueDate)\n                },\n                children: [\"Due: \", new Date(task.dueDate).toLocaleDateString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 19\n            }, this)]\n          }, task._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 17\n          }, this)), showCreateButtons && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-task-button\",\n            onClick: () => handleAddTask(column),\n            children: \"+ Add Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this)]\n      }, column, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      isOpen: showTaskForm,\n      onClose: () => {\n        setShowTaskForm(false);\n        setPrefillStatus(null);\n      },\n      onTaskCreated: handleTaskCreated,\n      prefillStatus: prefillStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), selectedTask && /*#__PURE__*/_jsxDEV(TaskDetail, {\n      task: selectedTask,\n      isOpen: showTaskDetail,\n      onClose: () => {\n        setShowTaskDetail(false);\n        setSelectedTask(null);\n      },\n      onTaskUpdated: handleTaskUpdated,\n      onTaskDeleted: handleTaskDeleted\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(KanbanBoard, \"kPNZQs6CE6j8kvJyamMkRCldy9U=\");\n_c = KanbanBoard;\nexport default KanbanBoard;\nvar _c;\n$RefreshReg$(_c, \"KanbanBoard\");","map":{"version":3,"names":["React","useState","useEffect","axios","TaskForm","TaskDetail","jsxDEV","_jsxDEV","Fragment","_Fragment","KanbanBoard","showCreateButtons","onTaskCreated","_s","kanbanData","setKanbanData","Backlog","Blocked","Complete","loading","setLoading","showTaskForm","setShowTaskForm","showTaskDetail","setShowTaskDetail","selectedTask","setSelectedTask","prefillStatus","setPrefillStatus","draggedTask","setDraggedTask","dragOverColumn","setDragOverColumn","fetchTasks","response","get","headers","localStorage","getItem","grouped","data","reduce","acc","task","status","push","error","console","getPriorityColor","priority","getDueDateColor","dueDate","now","Date","due","diffTime","diffDays","Math","ceil","handleAddTask","handleTaskClick","handleTaskCreated","handleTaskUpdated","updatedTask","handleTaskDeleted","taskId","handleDragStart","e","dataTransfer","effectAllowed","setData","target","outerHTML","handleDragOver","columnName","preventDefault","dropEffect","handleDragLeave","handleDrop","targetColumn","put","_id","prev","newData","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","column","onDragOver","onDragLeave","onDrop","length","onClick","draggable","onDragStart","title","style","backgroundColor","description","caseName","assignedTo","color","toLocaleDateString","isOpen","onClose","onTaskUpdated","onTaskDeleted","_c","$RefreshReg$"],"sources":["/Users/eesahadam/Desktop/socialcare99/client/src/components/KanbanBoard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TaskForm from './TaskForm';\nimport TaskDetail from './TaskDetail';\nimport './KanbanBoard.css';\n\nconst KanbanBoard = ({ showCreateButtons = false, onTaskCreated }) => {\n  const [kanbanData, setKanbanData] = useState({\n    Backlog: [],\n    'In Progress': [],\n    Blocked: [],\n    Complete: []\n  });\n  const [loading, setLoading] = useState(true);\n  const [showTaskForm, setShowTaskForm] = useState(false);\n  const [showTaskDetail, setShowTaskDetail] = useState(false);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [prefillStatus, setPrefillStatus] = useState(null);\n  const [draggedTask, setDraggedTask] = useState(null);\n  const [dragOverColumn, setDragOverColumn] = useState(null);\n\n  const fetchTasks = async () => {\n    try {\n      const response = await axios.get('http://localhost:3000/api/tasks', {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n\n      const grouped = response.data.reduce((acc, task) => {\n        const status = task.status || 'Backlog';\n        if (!acc[status]) acc[status] = [];\n        acc[status].push(task);\n        return acc;\n      }, {\n        Backlog: [],\n        'In Progress': [],\n        Blocked: [],\n        Complete: []\n      });\n\n      setKanbanData(grouped);\n    } catch (error) {\n      console.error('Failed to fetch tasks:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  useEffect(() => {\n    if (onTaskCreated) {\n      fetchTasks();\n    }\n  }, [onTaskCreated]);\n\n  const getPriorityColor = (priority) => {\n    switch (priority) {\n      case 'High': return '#e74c3c';\n      case 'Medium': return '#f1c40f';\n      case 'Low': return '#2ecc71';\n      default: return '#95a5a6';\n    }\n  };\n\n  const getDueDateColor = (dueDate) => {\n    const now = new Date();\n    const due = new Date(dueDate);\n    const diffTime = due - now;\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n\n    if (diffDays < 0) {\n      return '#e74c3c'; // Red for overdue\n    } else if (diffDays <= 3) {\n      return '#f39c12'; // Amber for due within 3 days\n    } else {\n      return '#6c757d'; \n    }\n  };\n\n  const handleAddTask = (status) => {\n    setPrefillStatus(status);\n    setShowTaskForm(true);\n  };\n\n  const handleTaskClick = (task) => {\n    setSelectedTask(task);\n    setShowTaskDetail(true);\n  };\n\n  const handleTaskCreated = (task) => {\n    fetchTasks();\n    setShowTaskForm(false);\n    setPrefillStatus(null);\n  };\n\n  const handleTaskUpdated = (updatedTask) => {\n    fetchTasks();\n    setSelectedTask(updatedTask);\n  };\n\n  const handleTaskDeleted = (taskId) => {\n    fetchTasks();\n    setShowTaskDetail(false);\n    setSelectedTask(null);\n  };\n\n  // Drag and Drop handlers\n  const handleDragStart = (e, task) => {\n    setDraggedTask(task);\n    e.dataTransfer.effectAllowed = 'move';\n    e.dataTransfer.setData('text/html', e.target.outerHTML);\n  };\n\n  const handleDragOver = (e, columnName) => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n    setDragOverColumn(columnName);\n  };\n\n  const handleDragLeave = (e) => {\n    e.preventDefault();\n    setDragOverColumn(null);\n  };\n\n  const handleDrop = async (e, targetColumn) => {\n    e.preventDefault();\n    setDragOverColumn(null);\n\n    if (!draggedTask || draggedTask.status === targetColumn) {\n      setDraggedTask(null);\n      return;\n    }\n\n    try {\n      // Update task status in backend\n      const response = await axios.put(`http://localhost:3000/api/tasks/${draggedTask._id}`, {\n        ...draggedTask,\n        status: targetColumn\n      }, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n\n      // Update local state\n      setKanbanData(prev => {\n        const newData = { ...prev };\n        \n        // Remove from original column\n        newData[draggedTask.status] = newData[draggedTask.status].filter(\n          task => task._id !== draggedTask._id\n        );\n        \n        // Add to target column\n        newData[targetColumn] = [...newData[targetColumn], response.data];\n        \n        return newData;\n      });\n\n      setDraggedTask(null);\n    } catch (error) {\n      console.error('Failed to update task status:', error);\n      setDraggedTask(null);\n    }\n  };\n\n  if (loading) {\n    return <div className=\"kanban-loading\">Loading tasks...</div>;\n  }\n\n  return (\n    <>\n      <div className=\"kanban-board\">\n        {Object.keys(kanbanData).map((column) => (\n          <div \n            key={column} \n            className={`kanban-column ${dragOverColumn === column ? 'drag-over' : ''}`}\n            onDragOver={(e) => handleDragOver(e, column)}\n            onDragLeave={handleDragLeave}\n            onDrop={(e) => handleDrop(e, column)}\n          >\n            <div className=\"kanban-column-header\">\n              <h3>{column}</h3>\n              <span className=\"task-count\">{kanbanData[column].length}</span>\n            </div>\n            <div className=\"kanban-column-content\">\n              {kanbanData[column].map((task) => (\n                <div \n                  key={task._id} \n                  className={`kanban-task ${draggedTask?._id === task._id ? 'dragging' : ''}`}\n                  onClick={() => handleTaskClick(task)}\n                  draggable\n                  onDragStart={(e) => handleDragStart(e, task)}\n                >\n                  <div className=\"task-header\">\n                    <div className=\"task-title-section\">\n                      <h4 className=\"task-title\">{task.title}</h4>\n                      <div className=\"drag-handle\">⋮⋮</div>\n                    </div>\n                    <div \n                      className=\"priority-indicator\"\n                      style={{ backgroundColor: getPriorityColor(task.priority) }}\n                    ></div>\n                  </div>\n                  {task.description && (\n                    <p className=\"task-description\">{task.description}</p>\n                  )}\n                  <div className=\"task-meta\">\n                    <span className=\"task-case\">Case: {task.caseName}</span>\n                    {task.assignedTo && (\n                      <span className=\"task-assignee\">Assigned: {task.assignedTo}</span>\n                    )}\n                    <span \n                      className=\"task-due\"\n                      style={{ color: getDueDateColor(task.dueDate) }}\n                    >\n                      Due: {new Date(task.dueDate).toLocaleDateString()}\n                    </span>\n                  </div>\n                </div>\n              ))}\n              {showCreateButtons && (\n                <button \n                  className=\"add-task-button\"\n                  onClick={() => handleAddTask(column)}\n                >\n                  + Add Task\n                </button>\n              )}\n            </div>\n          </div>\n        ))}\n      </div>\n\n      <TaskForm\n        isOpen={showTaskForm}\n        onClose={() => {\n          setShowTaskForm(false);\n          setPrefillStatus(null);\n        }}\n        onTaskCreated={handleTaskCreated}\n        prefillStatus={prefillStatus}\n      />\n\n      {selectedTask && (\n        <TaskDetail\n          task={selectedTask}\n          isOpen={showTaskDetail}\n          onClose={() => {\n            setShowTaskDetail(false);\n            setSelectedTask(null);\n          }}\n          onTaskUpdated={handleTaskUpdated}\n          onTaskDeleted={handleTaskDeleted}\n        />\n      )}\n    </>\n  );\n};\n\nexport default KanbanBoard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}